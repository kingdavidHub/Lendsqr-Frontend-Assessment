import { render, screen, fireEvent } from "@testing-library/react";
import "@testing-library/jest-dom";
import { BrowserRouter } from "react-router-dom";
import { ToggleContext } from "../context/ToggleContext";
import Sidebar from "../components/Sidebar/Sidebar";

// Mock context methods
const mockedSetToggle = jest.fn();

jest.mock("react-router-dom", () => ({
  ...jest.requireActual("react-router-dom"),
  BrowserRouter: ({ children }: any) => <div>{children}</div>,
}));

describe("Sidebar Component", () => {
  const renderSidebar = (toggleValue = true) => {
    return render(
      <ToggleContext.Provider
        value={{ toggle: toggleValue, setToggle: mockedSetToggle }}
      >
        <BrowserRouter>
          <Sidebar />
        </BrowserRouter>
      </ToggleContext.Provider>
    );
  };

  beforeEach(() => {
    jest.clearAllMocks();
  });

  it("renders sidebar with default sections", () => {
    renderSidebar();
    expect(screen.getByAltText("Briefcase Icon")).toBeInTheDocument();
    expect(screen.getByText("Switch Organization")).toBeInTheDocument();
    expect(screen.getByAltText("Home Icon")).toBeInTheDocument();
    expect(screen.getByText("Dashboard")).toBeInTheDocument();
  });

  it("applies active class when toggle is true", () => {
    renderSidebar(true);
    const sidebarElement = screen.getByRole("navigation");
    expect(sidebarElement).toHaveClass("active");
  });

  it("removes active class when toggle is false", () => {
    renderSidebar(false);
    const sidebarElement = screen.getByRole("navigation");
    expect(sidebarElement).not.toHaveClass("active");
  });

  it("calls setToggle(false) when clicked away", () => {
    renderSidebar(true);
    fireEvent.click(document.body);
    expect(mockedSetToggle).toHaveBeenCalledWith(false);
  });

  it("handles missing setToggle without errors", () => {
    render(
      <ToggleContext.Provider value={{ toggle: true, setToggle: undefined }}>
        <BrowserRouter>
          <Sidebar />
        </BrowserRouter>
      </ToggleContext.Provider>
    );
    fireEvent.click(document.body);
    expect(mockedSetToggle).not.toHaveBeenCalled();
  });
});
